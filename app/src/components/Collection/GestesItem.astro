---
import { Icon } from "astro-icon/components";
import { type Geste, Type } from "../../data/gestes";

interface Props {
    class?: string;
    value: Geste;
}

const { value, class: className = "" } = Astro.props;

const icon = (type: Type) => {
    switch (type) {
        case Type.murs:
            return "murs";
        case Type.planchers_bas:
            return "plancher-bas";
        case Type.planchers_hauts:
            return "plancher-haut";
        case Type.baies:
            return "baie";
        case Type.portes:
            return "porte";
        case Type.chauffage:
            return "chauffage";
        case Type.ecs:
            return "ecs";
        case Type.ventilation:
            return "ventilation";
        case Type.refroidissement:
            return "refroidissement";
    }
};
---

<div
    class:list={[
        "geste w-full md:w-[220px] border border-color border-3 p-4 bg-white rounded-md",
        className,
    ]}
    data-name={value.titre}
>
    <div class="grid grid-flow-row-dense gap-4">
        <div class="geste-icon">
            <Icon
                class="m-auto"
                name={icon(value.type)}
                width={58}
                height={58}
            />
        </div>

        <div class="geste-content text-center">
            <div class="font-semibold mb-4">{value.titre}</div>
            {value.description.split("\n").map((line) => <p>{line}</p>)}
        </div>

        <div class="geste-actions flex justify-between items-center">
            <div class="add btn btn-circle btn-ghost btn-lg">
                <Icon name="double-check" class="icon color-success" />
            </div>
            <div class="remove btn btn-circle btn-ghost btn-lg">
                <Icon name="cancel" class="icon disabled" />
            </div>
        </div>
    </div>
</div>

<style>
    .active {
        border-color: var(--color-primary);

        .add .icon {
            @extends .disabled;
            color: var(--color-disabled);
        }
        .remove .icon {
            @extends .color-error;
            color: var(--color-error);
        }
    }
</style>

<script>
    import {
        $gestes,
        addGeste,
        removeGeste,
        hasGeste,
    } from "../../stores/user";

    $gestes.subscribe((gestes) => {
        document.querySelectorAll(".geste").forEach((element) => {
            const name = element.getAttribute("data-name");
            name && hasGeste(name)
                ? element.classList.add("active")
                : element.classList.remove("active");
        });
    });

    document.querySelectorAll(".geste").forEach((element) => {
        const name = element.getAttribute("data-name");

        if (!name) {
            return;
        }

        element
            .querySelector(".add")
            ?.addEventListener("click", () => addGeste(name));

        element
            .querySelector(".remove")
            ?.addEventListener("click", () => removeGeste(name));
    });
</script>
