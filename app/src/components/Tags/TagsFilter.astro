---
interface Props {
    name: string;
    tags: string[];
}

const { name, tags } = Astro.props;
---

<div class="tags-filter active" data-name={name} data-tags={tags.join("|")}>
    <slot />
</div>

<style>
    .tags-filter {
        display: none;

        &.active {
            display: block;
        }
    }
</style>

<script>
    import { $tags } from "../../stores/tags";

    $tags.subscribe(($tags) => {
        Object.keys($tags).forEach(($name) => {
            document
                .querySelectorAll(`.tags-filter[data-name="${$name}"]`)
                .forEach((element) => {
                    const name = element.getAttribute("data-name");
                    const tags =
                        element.getAttribute("data-tags")?.split("|") ?? [];

                    if (null === name) {
                        return;
                    }
                    if ($tags[$name].length === 0) {
                        element.classList.add("active");
                        return;
                    }
                    tags.filter((tag) => $tags[$name].includes(tag)).length > 0
                        ? element.classList.add("active")
                        : element.classList.remove("active");
                });
        });
    });
</script>
