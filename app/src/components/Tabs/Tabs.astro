---
interface Props {
    className?: string;
    name: string;
    current: string;
}

const { name, current, className = "" } = Astro.props;
---

<div
    class:list={[
        "tabs w-full flex flex-nowrap items-center overscroll-none overflow-x-auto text-center",
        className,
    ]}
    data-name={name}
    data-current={current}
>
    <slot />
</div>

<style>
    .tabs {
        border-bottom: solid 1px var(--color-primary-content);
    }
</style>

<script>
    import { $tabs, set, change } from "../../stores/tabs";

    $tabs.subscribe(($tabs) => {
        Object.keys($tabs).forEach(($name) => {
            document
                .querySelectorAll(`.tabs[data-name="${$name}"] .tab`)
                .forEach((element) => {
                    element.getAttribute("data-name") === $tabs[$name]
                        ? element.classList.add("active")
                        : element.classList.remove("active");
                });
        });
    });

    document.querySelectorAll(".tabs").forEach((tabs) => {
        const tabsName = tabs.getAttribute("data-name");
        const current = tabs.getAttribute("data-current");

        if (null === tabsName || null === current) {
            return;
        }

        set(tabsName, current);

        tabs.querySelectorAll(".tab").forEach((tab) => {
            tab.addEventListener("click", () => {
                const name = tab.getAttribute("data-name");

                if (name) {
                    change(tabsName, name);
                }
            });
        });
    });
</script>
